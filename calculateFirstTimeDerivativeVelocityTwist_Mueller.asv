function [dV_i_s_dt1, dV_i_s_dt2] = calculateFirstTimeDerivativeVelocityTwist_Mueller(Js,dJs,ddq,dq)
% Implements eq.(18) in Mueller Dynamics
% dV_i_s_dt1 is the 1st "="
% dV_i_s_dt2 is the 2nd "="

nDoF = size(Js,2);
%% 1st "="
dV_i_s1 = sym(zeros(6,1),'d');

for i=1:nDoF
    dV1 = sym(zeros(6,1),'d');
    dV2 = sym(zeros(6,1),'d');
    
    for j=1:i
        dV1 = dV1 + Js(:,j) * ddq;
    end
    
    for k=j+1:i
        dV2 = dV2 + liebracket_426_new(Js(:,k), Js(:,j)) * dq(j) * dq(k) ;
    end
    
    dV_i_s1(:,i) = dV1 + dV2;
end

dV_i_s_dt1 = dV_i_s1;

%% 2nd "="
dV_i_s2 = sym(zeros(6,1),'d');

for i=1:nDoF
    for j=1:i
        dV = sym(zeros(6,1),'d');
    end
    
end
end